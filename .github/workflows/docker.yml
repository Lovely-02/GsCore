name: 自动检测GsCore并构建

on:
  schedule:
    - cron: "0 * * * *" # 每隔1小时执行一次
  workflow_dispatch: # 允许手动触发

permissions:
  contents: read
  packages: write
  actions: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          repository: Genshin-bots/gsuid_core # 原始仓库地址
          ref: master # 要检测的分支
          fetch-depth: 0 # 完整克隆

      - name: 登录 Docker 镜像仓库
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 登陆 GitHub 镜像仓库
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 获取最新提交哈希
        id: last_commit
        run: |
          echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: 检查缓存是否存在
        id: cache
        uses: actions/cache@v3
        with:
          path: .git
          key: ${{ runner.os }}-git-${{ steps.last_commit.outputs.hash }}

      - name: 生成镜像元数据
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            docker.io/${{ secrets.DOCKER_USERNAME }}/gsuid_core
            ghcr.io/${{ github.repository_owner }}/gsuid_core
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern=latest,enable={{is_default_branch}}

      - name: 设置 QEMU
        uses: docker/setup-qemu-action@v3

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 构建并推送 Docker 镜像
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v5
        with:
          context: . # 指定构建上下文路径为项目根目录
          file: Dockerfile # 指定使用国内镜像源的 Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        env:
          DOCKER_BUILDKIT: 1 # 启用 BuildKit 以获取更详细的构建日志
